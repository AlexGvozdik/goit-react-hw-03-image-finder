{"version":3,"sources":["services/api.js","Components/Modal/Modal.styled.jsx","Components/Modal/Modal.jsx","Components/Searchbar/Searchbar.styled.jsx","Components/Searchbar/Searchbar.jsx","Components/ImageGallery/ImageGalleryItem/ImageGalleryItem.styled.jsx","Components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.styled.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Button/Button.styled.jsx","Components/Button/Button.jsx","Components/Loader/Loader.styled.jsx","Components/Loader/Loader.jsx","Components/App.jsx","index.js"],"names":["Api","fetchImages","searchQuery","page","axios","get","then","response","data","hits","MyModal","styled","div","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","onClick","className","src","largeImageURL","alt","Component","MyHeader","header","Searchbar","state","query","handleSubmit","preventDefault","trim","onSubmit","setState","toast","info","handleChange","value","type","autoComplete","autoFocus","placeholder","onChange","LiItem","li","ImageGalleryItem","webformatURL","getLargeImageURL","MyList","ul","ImageGallery","images","onSelect","map","tags","id","MyBtn","button","Button","LoaderStyled","LoaderComponent","color","height","width","timeout","App","loading","error","showModal","selectedImage","toggleModal","handleSelectImage","imageUrl","prevState","catch","finally","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","Loader","length","position","autoClose","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c02ca051.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst key = '22976896-bd5d8392eebfe801bc51d8ead'\r\nconst url='https://pixabay.com/api/';\r\n\r\n function fetchImages({ searchQuery, page}){\r\n    return  axios\r\n    .get(\r\n        `${url}?q=${searchQuery}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`\r\n        )\r\n        .then(response=> response.data.hits)\r\n};\r\n\r\n\r\nconst Api={\r\n    fetchImages,\r\n}\r\nexport default Api;","import styled from \"@emotion/styled\";\r\n\r\nexport const MyModal = styled.div`\r\n    position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n  .Modal {\r\n    max-width: calc(100vw - 48px);\r\n    max-height: calc(100vh - 24px);\r\n  }\r\n`","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { MyModal } from './Modal.styled';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <MyModal  onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.largeImageURL} alt=\"\"/>\r\n        </div>\r\n      </MyModal>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const MyHeader = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n    \r\n.searchForm {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n}\r\n\r\n.searchBtn {\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n}\r\n\r\n.searchBtn:hover {\r\n  opacity: 1;\r\n}\r\n\r\n.searchLable {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n}\r\n\r\n.searchInput {\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n}\r\n\r\n.searchInput::placeholder {\r\n  font: inherit;\r\n  font-size: 18px;\r\n}\r\n`","import React, { Component } from 'react';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PropTypes from \"prop-types\";\r\nimport { MyHeader } from './Searchbar.styled';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n      query:'',\r\n  };\r\n\r\n  handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    if(this.state.query.trim()===\"\"){\r\n      toast.info(\"Введите название картинки\");\r\n      return;\r\n    }\r\n   this.props.onSubmit(this.state.query);\r\n   this.setState({query:''});\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      query:e.currentTarget.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MyHeader >\r\n        <form className='searchForm' onSubmit={this.handleSubmit}>\r\n          <button className='searchBtn' type=\"submit\">\r\n            <span className='searchLable'>Search</span>\r\n          </button>\r\n          <input\r\n            className='searchInput'\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n            value={this.state.query}\r\n          />          \r\n        </form>\r\n      </MyHeader>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default Searchbar;","import styled from \"@emotion/styled\";\r\n\r\nexport const LiItem = styled.li`\r\n\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n\r\n\r\n.galleryItemImage {\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n\r\n.galleryItemImage:hover {\r\n  transform: scale(1.03);\r\n  cursor: zoom-in;\r\n}\r\n`","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { LiItem } from './ImageGalleryItem.styled';\r\n\r\nconst ImageGalleryItem = ({ webformatURL,largeImageURL,alt=\"\",getLargeImageURL}) => {\r\n  \r\n  return (\r\n    <LiItem >\r\n      <img\r\n        className='galleryItemImage'\r\n        src={webformatURL}\r\n        alt={alt}\r\n        onClick={()=>getLargeImageURL(largeImageURL)} \r\n      />\r\n    </LiItem>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    webformatURL: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    alt: PropTypes.string,\r\n    getLargeImageURL: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default ImageGalleryItem;","import styled from \"@emotion/styled\";\r\n\r\nexport const MyList = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\r\nimport { MyList } from './ImageGallery.styled';\r\n\r\nconst ImageGallery = ({images,onSelect}) => {\r\n  return (\r\n    <MyList >\r\n        {images.map(({webformatURL,largeImageURL,tags,id})=>(\r\n        \r\n        <ImageGalleryItem \r\n        key={id}\r\n        webformatURL={webformatURL}\r\n        largeImageURL={largeImageURL}\r\n        alt={tags}\r\n        getLargeImageURL={onSelect}\r\n        />\r\n         \r\n        ))}\r\n    </MyList>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onSelect: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGallery;","import styled from \"@emotion/styled\";\r\n\r\nexport const MyBtn = styled.button`\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n\r\n&:hover,\r\n&:focus {\r\n  background-color: #303f9f;\r\n}\r\n`","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { MyBtn } from \"./Button.styled\";\r\n\r\nconst Button = ({ fetchImages}) => {\r\n  return (\r\n    <MyBtn  type=\"button\" onClick={fetchImages}>\r\n     Load more\r\n    </MyBtn>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n    fetchImages: PropTypes.func.isRequired\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const LoaderStyled = styled.div`\r\n  .spinner {\r\n    display: block;\r\n    position: absolute;\r\n    content: \"\";\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n`;","import React from \"react\";\r\nimport { LoaderStyled } from \"./Loader.styled\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst LoaderComponent = () => {\r\n\r\n  return (\r\n    <LoaderStyled>\r\n      <Loader\r\n        type='Circles'\r\n        color='#819ff5'\r\n        height={100}\r\n        width={100}\r\n        className='spinner'\r\n         timeout={10000}\r\n      />\r\n    </LoaderStyled>\r\n  );\r\n};\r\n\r\nexport default LoaderComponent;","import React, { Component } from 'react';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Api from '../services/api';\r\nimport Modal from './Modal/Modal';\r\nimport Searchbar from './Searchbar/Searchbar';\r\nimport ImageGallery from './ImageGallery/ImageGallery';\r\nimport Button from './Button/Button';\r\nimport Loader from './Loader/Loader';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    images: [],\r\n    loading: false,\r\n    error: null,\r\n    showModal: false,\r\n    searchQuery: '',\r\n    page: 1,\r\n    selectedImage: \"\",\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchImages();\r\n    }\r\n    if (this.state.page !== 2 && prevState.page !== this.state.page) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  handleSelectImage = imageUrl => {\r\n    this.setState({ selectedImage: imageUrl });\r\n    this.toggleModal();\r\n  };\r\n\r\n  handleSubmit = query => {\r\n    this.setState({ images: [], searchQuery: query, page: 1 });\r\n    \r\n  };\r\n\r\n  fetchImages = () => {\r\n    const {searchQuery, page} = this.state;\r\n    this.setState({ loading: true });\r\n    Api.fetchImages({searchQuery, page})\r\n      .then(hits => {\r\n        this.setState(prevState => ({\r\n          images: [...prevState.images, ...hits],\r\n          page: prevState.page + 1,\r\n        }));\r\n      })\r\n      .catch(error => this.setState({error:true}))\r\n      .finally(() => this.setState({ loading: false }));\r\n\r\n      \r\n  };\r\n\r\n  render() {\r\n    const { images, loading, selectedImage,showModal,error} = this.state;\r\n    return (\r\n      <>\r\n        {error && toast.error('OOO, something is wrong!')}\r\n        <Searchbar onSubmit={this.handleSubmit} />\r\n        {loading && <Loader />}\r\n        <ImageGallery images={images} onSelect={this.handleSelectImage} />\r\n        {images.length > 0 && <Button fetchImages={this.fetchImages} />}\r\n        {showModal && (\r\n        <Modal onClose={this.toggleModal} largeImageURL={selectedImage}/>   \r\n        )}\r\n        <ToastContainer  position=\"bottom-left\" autoClose={3000}/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App.jsx';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n"],"sourceRoot":""}